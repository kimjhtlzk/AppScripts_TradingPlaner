# 📊 구글 스프레드시트 주식 트래커 최종 버전 (v4.0)

## 🎯 최종 열 구조 (자동 수식 적용)
| A열 | B열 | C열 | D열 | E열 | F열 |
|---|---|---|---|---|---|
| 종목코드 | 종목명 | 현재가 | 등락률 | 시장구분 | 새로고침 시간 |

**v4.0 주요 변경사항:**
- Apps Script를 통한 자동 수식 적용 기능 추가
- F1 셀에 마지막 새로고침 시간 자동 표시
- NASDAQ 등락률 수식 수정 (/100 추가)
- 통화 서식 자동 적용 (미국: $, 한국: ₩)

## ✅ 완성된 수식 (나스닥 + 한국 주식 통합)

### 📝 사용 방법 (v4.0 - 자동 적용)

#### 권장 방법: Apps Script 사용 (auto_apply_formulas.gs)
1. **A열**: 종목코드 입력 (예: AAPL, 005930)
2. **E열**: 시장구분 입력 (NASDAQ, KOSPI, KOSDAQ)
3. **Enter** → B, C, D열 수식 자동 생성!

#### 수동 방법: 직접 수식 입력
1. **A열**: 종목코드 또는 티커 심볼 입력
   - 한국 주식: `005930` (6자리 숫자)
   - 나스닥: `AAPL` (알파벳 티커)
2. **E열**: 시장구분 입력 (필수)
   - `NASDAQ` / `KOSPI` / `KOSDAQ` 중 하나
3. **B~D열**: 아래 수식 복사하여 붙여넣기
4. **D열**: 셀 서식을 백분율로 설정
5. **F1 셀**: "새로고침 시간" 또는 비워두기 (자동 업데이트됨)

---

## 🔧 각 열별 수식

### A2: 종목코드 입력
```
예시:
- 한국: 005930, 035420, 000660
- 나스닥: AAPL, GOOGL, TSLA, MSFT
```

### B2: 종목명 (자동 표시)
```
=IF(A2="","",IF(E2="NASDAQ",IFERROR(GOOGLEFINANCE(A2,"name"),A2),IFERROR(REGEXEXTRACT(IMPORTXML("https://finance.naver.com/item/main.nhn?code="&A2,"//title"),"^([^:]+)"),"")))
```

**설명:**
- A2가 비어있으면 빈 값 반환
- E2가 "NASDAQ"이면 GOOGLEFINANCE 함수로 종목명 가져오기
- 한국 주식이면 네이버 금융에서 title 태그 추출
- REGEXEXTRACT로 ":" 이전 부분만 추출 (종목명만)

### C2: 현재가
```
=IF(A2="","",IF(E2="NASDAQ",IFERROR(GOOGLEFINANCE(A2,"price"),"N/A"),IFERROR(VALUE(SUBSTITUTE(IMPORTXML("https://finance.naver.com/item/sise.naver?code="&A2,"//strong[@id='_nowVal']"),",","")),"로딩 실패")))
```

**설명:**
- 나스닥: GOOGLEFINANCE로 실시간 가격 (최대 20분 지연)
- 한국: 네이버 금융 시세 페이지에서 현재가 추출
- VALUE + SUBSTITUTE로 쉼표 제거 후 숫자 변환
- 오류시 "N/A" 또는 "로딩 실패" 표시

### D2: 등락률 (숫자값 반환)
```
=IF(A2="","",IF(E2="NASDAQ",IFERROR(GOOGLEFINANCE(A2,"changepct")/100,"N/A"),IFERROR(VALUE(SUBSTITUTE(SUBSTITUTE(IMPORTXML("https://finance.naver.com/item/sise.naver?code="&A2,"//strong[@id='_rate']//span"),"%",""),",",""))/100,"로딩 실패")))
```

**설명:**
- 나스닥: GOOGLEFINANCE changepct (1.47 = 1.47%) → **100으로 나누기**
- 한국: 네이버에서 % 문자열 가져온 후 숫자로 변환
  1. IMPORTXML로 등락률 텍스트 추출 (예: "+1.23%")
  2. SUBSTITUTE로 % 기호와 쉼표 제거
  3. VALUE로 숫자 변환 후 100으로 나누기
- **중요**: 숫자값 반환 (0.0147 = 1.47%) - 백분율 서식 필수

### E2: 시장구분
```
드롭다운 또는 직접 입력:
NASDAQ / KOSPI / KOSDAQ
```

---

## 🎨 필수 서식 설정

### 📊 D열 (등락률) 백분율 서식 설정 - 매우 중요!

#### 방법 1: 메뉴 사용
1. **D열 전체 선택** (D 클릭)
2. **서식** → **숫자** → **백분율**
3. **소수점 자릿수 설정**:
   - 기본값 아이콘 옆 화살표 클릭
   - 소수점 증가 버튼 2번 클릭
   - 또는 **더보기** → **맞춤 숫자 형식**

#### 방법 2: 맞춤 숫자 형식
1. **D열 전체 선택**
2. **서식** → **숫자** → **더보기** → **맞춤 숫자 형식**
3. **형식 입력**: `0.00%`
4. **적용** 클릭

#### 결과 예시:
- 수식 반환값: `0.0123`
- 화면 표시: `1.23%`
- 수식 반환값: `-0.0045`
- 화면 표시: `-0.45%`

### 🎨 조건부 서식 (등락률 색상)

1. **D열 선택**
2. **서식** → **조건부 서식**
3. **규칙 추가**:

#### 상승 (빨간색)
- 조건: **사용자 정의 수식**
- 값: `=D2>0`
- 서식: 텍스트 색상 **빨간색** (#EA4335)

#### 하락 (파란색)
- 조건: **사용자 정의 수식**
- 값: `=D2<0`
- 서식: 텍스트 색상 **파란색** (#4285F4)

#### 보합 (검은색)
- 조건: **사용자 정의 수식**
- 값: `=D2=0`
- 서식: 텍스트 색상 **검은색** (#000000)

### 💰 C열 (현재가) 통화 서식 (v4.0 자동 적용)

**자동 적용 (Apps Script 사용시):**
- 종목코드 입력시 자동으로 통화 서식 적용
- NASDAQ: `$#,##0.00` (예: $195.42)
- KOSPI/KOSDAQ: `₩#,##0` (예: ₩71,300)

**수동 적용:**
1. **C열 선택**
2. **서식** → **숫자** → **맞춤 숫자 형식**
3. NASDAQ: `$#,##0.00` 입력
4. KOSPI/KOSDAQ: `₩#,##0` 입력

**일괄 적용:**
- 메뉴 → **📈 주식 트래커** → **💱 통화 서식 일괄 적용**

---

## 🔄 자동 수식 적용 + 새로고침 스크립트 (v4.0)

### 설치 방법:
1. **도구** → **스크립트 편집기**
2. **auto_apply_formulas.gs** 파일 내용 전체 복사
3. 스크립트 편집기에 붙여넣기
4. **저장** → **실행** (onOpen 함수) → 권한 승인

### 주요 기능:
- **자동 수식 적용**: A열과 E열 입력시 B, C, D열 자동 생성
- **자동 새로고침**: 1분마다 데이터 업데이트
- **시간 표시**: F1 셀에 "마지막 새로고침: 2025-10-17 14:32:15" 표시

```javascript
function onOpen() {
  var ui = SpreadsheetApp.getUi();
  ui.createMenu('📈 주식 트래커')
    .addItem('🔄 수동 새로고침', 'manualRefresh')
    .addItem('⏰ 1분 자동 새로고침 시작', 'startAutoRefresh')
    .addItem('⏹ 자동 새로고침 중지', 'stopAutoRefresh')
    .addItem('🔧 오류 수정', 'fixFormulas')
    .addSeparator()
    .addItem('📝 모든 행에 수식 적용', 'applyFormulasToAll')
    .addItem('💱 통화 서식 일괄 적용', 'applyCurrencyFormatToAll')
    .addToUi();
}

function manualRefresh() {
  var sheet = SpreadsheetApp.getActiveSheet();
  var dataRange = sheet.getRange("B2:F50");
  var formulas = dataRange.getFormulas();

  // 현재 시간을 F1 셀에 표시
  var now = new Date();
  var timeString = Utilities.formatDate(now, Session.getScriptTimeZone(), "yyyy-MM-dd HH:mm:ss");
  sheet.getRange("F1").setValue("마지막 새로고침: " + timeString);

  for (var i = 0; i < formulas.length; i++) {
    for (var j = 0; j < formulas[i].length; j++) {
      if (formulas[i][j] && formulas[i][j].includes("IMPORTXML")) {
        var cell = dataRange.getCell(i + 1, j + 1);
        var originalFormula = formulas[i][j];
        cell.setValue("");
        SpreadsheetApp.flush();
        cell.setFormula(originalFormula);
      }
    }
  }

  SpreadsheetApp.getActiveSpreadsheet().toast('✅ 새로고침 완료', '완료', 2);
}

function fixFormulas() {
  var sheet = SpreadsheetApp.getActiveSheet();
  var dataRange = sheet.getRange("B2:D50");
  var formulas = dataRange.getFormulas();
  var fixedCount = 0;

  for (var i = 0; i < formulas.length; i++) {
    for (var j = 0; j < formulas[i].length; j++) {
      if (formulas[i][j]) {
        var formula = formulas[i][j];
        // 수식 끝에 잘못 추가된 &t= 제거
        if (formula.match(/\)\)&[tr]=\d+/)) {
          formula = formula.replace(/\)\)&[tr]=\d+/, "))");
          dataRange.getCell(i + 1, j + 1).setFormula(formula);
          fixedCount++;
        }
      }
    }
  }

  if (fixedCount > 0) {
    SpreadsheetApp.getActiveSpreadsheet().toast('✅ ' + fixedCount + '개 수식 수정 완료', '수정 완료', 3);
  } else {
    SpreadsheetApp.getActiveSpreadsheet().toast('👍 수정할 오류가 없습니다', '확인', 2);
  }
}

function startAutoRefresh() {
  stopAutoRefresh();
  ScriptApp.newTrigger('manualRefresh')
    .timeBased()
    .everyMinutes(1)
    .create();

  SpreadsheetApp.getActiveSpreadsheet().toast('⏰ 1분마다 자동 새로고침 시작', '설정 완료', 3);
}

function stopAutoRefresh() {
  var triggers = ScriptApp.getProjectTriggers();
  triggers.forEach(function(trigger) {
    if (trigger.getHandlerFunction() == 'manualRefresh') {
      ScriptApp.deleteTrigger(trigger);
    }
  });

  SpreadsheetApp.getActiveSpreadsheet().toast('⏹ 자동 새로고침 중지', '중지', 2);
}
```

---

## 📋 사용 예시

### 입력 데이터:
| A열 | E열 |
|---|---|
| AAPL | NASDAQ |
| 005930 | KOSPI |
| TSLA | NASDAQ |
| 035720 | KOSDAQ |

### 결과 (자동 표시):
| A열 | B열 | C열 | D열 | E열 | F열 |
|---|---|---|---|---|---|
| AAPL | Apple Inc. | **$195.42** | 1.23% | NASDAQ | 마지막 새로고침: 2025-10-17 14:32:15 |
| 005930 | 삼성전자 | **₩71,300** | -0.70% | KOSPI | |
| TSLA | Tesla, Inc. | **$242.84** | 1.47% | NASDAQ | |
| 035720 | 카카오 | **₩45,600** | 1.82% | KOSDAQ | |

*F1 셀에만 새로고침 시간이 표시됩니다.*
*C열은 시장구분(E열)에 따라 자동으로 달러($) 또는 원화(₩) 표시*

---

## ⚠️ 주의사항 및 트러블슈팅

### 1. 종목코드 형식
- **한국 주식**: 6자리 숫자 (앞자리 0 유지)
  - 텍스트 형식: `'005930`
  - 또는 셀 서식을 "일반 텍스트"로 설정
- **나스닥**: 대문자 티커 (AAPL, GOOGL, MSFT)

### 2. #NAME? 오류
- **원인**: 자동 새로고침 스크립트 오류
- **해결**: 메뉴 → "🔧 오류 수정" 클릭

### 3. "로딩 실패" 표시
- **원인**: IMPORTXML 호출 제한 (50개)
- **해결**: 종목 수 줄이기 또는 시간 간격 두고 재시도

### 4. 등락률이 소수로 표시
- **원인**: 셀 서식이 백분율로 설정 안 됨
- **해결**: D열 선택 → 서식 → 숫자 → 백분율

### 5. 데이터 지연
- **GOOGLEFINANCE**: 최대 20분 지연
- **네이버 금융**: 실시간 (웹페이지와 동일)
- **구글 스프레드시트 캐싱**: 15분

---

## 📊 데이터 소스

### NASDAQ (GOOGLEFINANCE)
- 실시간 ~ 20분 지연
- 무료 제공
- 안정적

### 한국 주식 (네이버 금융)
- URL: `https://finance.naver.com/item/sise.naver?code=종목코드`
- 실시간 데이터
- XPath 선택자:
  - 종목명: `//title`
  - 현재가: `//strong[@id='_nowVal']`
  - 등락률: `//strong[@id='_rate']//span`

---

## 💡 최종 팁

1. **빠른 복사**: B2:D2 수식 입력 후 아래로 드래그
2. **E열 드롭다운**: 데이터 검증으로 NASDAQ/KOSPI/KOSDAQ 선택 목록 만들기
3. **자동 정렬**: 데이터 → 필터 만들기 → 등락률 기준 정렬
4. **성능 최적화**: 50개 이하 종목 권장

---

## 📝 버전 히스토리

- **v4.0**: Apps Script 자동 수식 적용, F1 셀 새로고침 시간 표시, NASDAQ 등락률 수식 수정
- **v3.0**: 거래량/시가총액 제거, 심플 버전
- **v2.1**: sise.naver URL 수정
- **v2.0**: 종목명 자동 표시 추가
- **v1.0**: 초기 버전